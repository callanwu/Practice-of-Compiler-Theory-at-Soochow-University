
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BREAK DIV ELIF ELSE FOR GE IF INC LE LEN NUMBER PRINT VARIABLE WHILEprogram : statementsstatements : statements statement\n                  | statement statement : assignment\n                  | operation\n                  | print\n                  | if_elif_else\n                  | while\n                  | for\n                  | BREAKassignment : VARIABLE '=' NUMBER\n                  | VARIABLE '[' expr ']' '=' NUMBER\n                  | VARIABLE '=' VARIABLE\n                  | VARIABLE '=' VARIABLE '[' expr ']'\n                  | VARIABLE '=' num_listnum_list : '[' numbers ']' numbers : NUMBER\n               | numbers ',' NUMBERoperation : VARIABLE '=' expr\n                 | VARIABLE '[' expr ']' '=' exprexpr : expr '+' term\n            | expr '-' term\n            | expr DIV expr\n            | term\n            | LEN '(' factor ')' term : term '*' factor\n            | term '/' factor\n            | factorfactor : NUMBER\n              | VARIABLE\n              | VARIABLE '[' expr ']'\n              | '(' expr ')' print : PRINT '(' VARIABLE ')' condition : factor '>' factor\n                 | factor '<' factor\n                 | factor LE factor\n                 | factor GE factorif_elif_else : if\n                    | if elif elseif : IF '(' condition ')' '{' statements '}' elif : ELIF '(' condition ')' '{' statements '}' else : ELSE '{' statements '}' while : WHILE '(' condition ')' '{' statements '}' for : FOR '(' conditions ')' '{' statements '}' conditions : assignment ';' condition ';' incrementincrement : VARIABLE INC"
    
_lr_action_items = {'ELIF':([5,119,],[21,-40,]),'NUMBER':([18,23,24,25,26,34,45,49,50,51,52,53,58,59,60,62,63,64,65,67,68,69,91,96,104,116,],[27,27,43,27,27,27,71,27,27,27,27,27,27,27,84,27,27,27,27,27,27,27,107,110,27,122,]),'WHILE':([0,1,4,5,6,8,9,11,14,15,16,17,27,29,32,38,41,42,43,44,46,55,56,73,79,80,86,87,88,89,90,92,95,97,98,99,100,101,105,106,107,108,109,111,112,113,118,119,],[2,2,-5,-38,-9,-3,-6,-4,-10,-8,-7,-2,-29,-30,-39,-24,-28,-19,-11,-13,-15,-33,2,-32,2,2,2,-26,-27,-21,-22,-23,-16,2,-31,2,-42,2,2,-20,-12,-25,-14,2,-43,2,-44,-40,]),'PRINT':([0,1,4,5,6,8,9,11,14,15,16,17,27,29,32,38,41,42,43,44,46,55,56,73,79,80,86,87,88,89,90,92,95,97,98,99,100,101,105,106,107,108,109,111,112,113,118,119,],[3,3,-5,-38,-9,-3,-6,-4,-10,-8,-7,-2,-29,-30,-39,-24,-28,-19,-11,-13,-15,-33,3,-32,3,3,3,-26,-27,-21,-22,-23,-16,3,-31,3,-42,3,3,-20,-12,-25,-14,3,-43,3,-44,-40,]),'DIV':([27,29,38,39,41,42,43,44,48,73,78,83,87,88,89,90,92,94,98,106,107,108,109,117,],[-29,-30,-24,67,-28,67,-29,-30,67,-32,67,67,-26,-27,-21,-22,67,67,-31,67,-29,-25,-31,67,]),'LE':([27,28,29,73,98,],[-29,49,-30,-32,-31,]),')':([27,29,30,31,37,38,41,47,48,57,73,74,75,76,77,87,88,89,90,92,93,98,108,114,121,],[-29,-30,54,55,61,-24,-28,72,73,81,-32,-36,-34,-37,-35,-26,-27,-21,-22,-23,108,-31,-25,-45,-46,]),'(':([2,3,10,13,18,21,23,24,25,26,34,40,49,50,51,52,53,58,59,62,63,64,65,67,68,69,91,104,],[18,19,22,25,26,34,26,26,26,26,26,68,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'+':([27,29,38,39,41,42,43,44,48,73,78,83,87,88,89,90,92,94,98,106,107,108,109,117,],[-29,-30,-24,64,-28,64,-29,-30,64,-32,64,64,-26,-27,-21,-22,64,64,-31,64,-29,-25,-31,64,]),'*':([27,29,38,41,43,44,73,87,88,89,90,98,107,109,],[-29,-30,62,-28,-29,-30,-32,-26,-27,62,62,-31,-29,-31,]),'-':([27,29,38,39,41,42,43,44,48,73,78,83,87,88,89,90,92,94,98,106,107,108,109,117,],[-29,-30,-24,65,-28,65,-29,-30,65,-32,65,65,-26,-27,-21,-22,65,65,-31,65,-29,-25,-31,65,]),',':([70,71,110,],[96,-17,-18,]),'/':([27,29,38,41,43,44,73,87,88,89,90,98,107,109,],[-29,-30,63,-28,-29,-30,-32,-26,-27,63,63,-31,-29,-31,]),';':([27,29,35,46,73,74,75,76,77,82,84,85,95,98,122,123,],[-29,-30,58,-15,-32,-36,-34,-37,-35,102,-11,-13,-16,-31,-12,-14,]),'=':([12,36,66,103,],[24,60,91,116,]),'<':([27,28,29,73,98,],[-29,52,-30,-32,-31,]),'$end':([1,4,5,6,7,8,9,11,14,15,16,17,27,29,32,38,41,42,43,44,46,55,73,87,88,89,90,92,95,98,100,106,107,108,109,112,118,119,],[-1,-5,-38,-9,0,-3,-6,-4,-10,-8,-7,-2,-29,-30,-39,-24,-28,-19,-11,-13,-15,-33,-32,-26,-27,-21,-22,-23,-16,-31,-42,-20,-12,-25,-14,-43,-44,-40,]),'FOR':([0,1,4,5,6,8,9,11,14,15,16,17,27,29,32,38,41,42,43,44,46,55,56,73,79,80,86,87,88,89,90,92,95,97,98,99,100,101,105,106,107,108,109,111,112,113,118,119,],[10,10,-5,-38,-9,-3,-6,-4,-10,-8,-7,-2,-29,-30,-39,-24,-28,-19,-11,-13,-15,-33,10,-32,10,10,10,-26,-27,-21,-22,-23,-16,10,-31,10,-42,10,10,-20,-12,-25,-14,10,-43,10,-44,-40,]),'ELSE':([20,120,],[33,-41,]),'GE':([27,28,29,73,98,],[-29,51,-30,-32,-31,]),'VARIABLE':([0,1,4,5,6,8,9,11,14,15,16,17,18,19,22,23,24,25,26,27,29,32,34,38,41,42,43,44,46,49,50,51,52,53,55,56,58,59,60,62,63,64,65,67,68,69,73,79,80,86,87,88,89,90,91,92,95,97,98,99,100,101,102,104,105,106,107,108,109,111,112,113,118,119,],[12,12,-5,-38,-9,-3,-6,-4,-10,-8,-7,-2,29,31,36,29,44,29,29,-29,-30,-39,29,-24,-28,-19,-11,-13,-15,29,29,29,29,29,-33,12,29,29,85,29,29,29,29,29,29,29,-32,12,12,12,-26,-27,-21,-22,29,-23,-16,12,-31,12,-42,12,115,29,12,-20,-12,-25,-14,12,-43,12,-44,-40,]),'[':([12,24,29,36,44,60,85,],[23,45,53,59,69,45,104,]),']':([27,29,38,39,41,70,71,73,78,83,87,88,89,90,92,94,98,108,110,117,],[-29,-30,-24,66,-28,95,-17,-32,98,103,-26,-27,-21,-22,-23,109,-31,-25,-18,123,]),'IF':([0,1,4,5,6,8,9,11,14,15,16,17,27,29,32,38,41,42,43,44,46,55,56,73,79,80,86,87,88,89,90,92,95,97,98,99,100,101,105,106,107,108,109,111,112,113,118,119,],[13,13,-5,-38,-9,-3,-6,-4,-10,-8,-7,-2,-29,-30,-39,-24,-28,-19,-11,-13,-15,-33,13,-32,13,13,13,-26,-27,-21,-22,-23,-16,13,-31,13,-42,13,13,-20,-12,-25,-14,13,-43,13,-44,-40,]),'LEN':([23,24,26,53,59,67,69,91,104,],[40,40,40,40,40,40,40,40,40,]),'BREAK':([0,1,4,5,6,8,9,11,14,15,16,17,27,29,32,38,41,42,43,44,46,55,56,73,79,80,86,87,88,89,90,92,95,97,98,99,100,101,105,106,107,108,109,111,112,113,118,119,],[14,14,-5,-38,-9,-3,-6,-4,-10,-8,-7,-2,-29,-30,-39,-24,-28,-19,-11,-13,-15,-33,14,-32,14,14,14,-26,-27,-21,-22,-23,-16,14,-31,14,-42,14,14,-20,-12,-25,-14,14,-43,14,-44,-40,]),'{':([33,54,61,72,81,],[56,79,86,97,101,]),'>':([27,28,29,73,98,],[-29,50,-30,-32,-31,]),'}':([4,5,6,8,9,11,14,15,16,17,27,29,32,38,41,42,43,44,46,55,73,80,87,88,89,90,92,95,98,99,100,105,106,107,108,109,111,112,113,118,119,],[-5,-38,-9,-3,-6,-4,-10,-8,-7,-2,-29,-30,-39,-24,-28,-19,-11,-13,-15,-33,-32,100,-26,-27,-21,-22,-23,-16,-31,112,-42,118,-20,-12,-25,-14,119,-43,120,-44,-40,]),'INC':([115,],[121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'increment':([102,],[114,]),'elif':([5,],[20,]),'statements':([0,56,79,86,97,101,],[1,80,99,105,111,113,]),'if_elif_else':([0,1,56,79,80,86,97,99,101,105,111,113,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'for':([0,1,56,79,80,86,97,99,101,105,111,113,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment':([0,1,22,56,79,80,86,97,99,101,105,111,113,],[11,11,35,11,11,11,11,11,11,11,11,11,11,]),'term':([23,24,26,53,59,64,65,67,69,91,104,],[38,38,38,38,38,89,90,38,38,38,38,]),'else':([20,],[32,]),'while':([0,1,56,79,80,86,97,99,101,105,111,113,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'program':([0,],[7,]),'numbers':([45,],[70,]),'statement':([0,1,56,79,80,86,97,99,101,105,111,113,],[8,17,8,8,17,8,8,17,8,17,17,17,]),'factor':([18,23,24,25,26,34,49,50,51,52,53,58,59,62,63,64,65,67,68,69,91,104,],[28,41,41,28,41,28,74,75,76,77,41,28,41,87,88,41,41,41,93,41,41,41,]),'print':([0,1,56,79,80,86,97,99,101,105,111,113,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'operation':([0,1,56,79,80,86,97,99,101,105,111,113,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'num_list':([24,60,],[46,46,]),'conditions':([22,],[37,]),'expr':([23,24,26,53,59,67,69,91,104,],[39,42,48,78,83,92,94,106,117,]),'condition':([18,25,34,58,],[30,47,57,82,]),'if':([0,1,56,79,80,86,97,99,101,105,111,113,],[5,5,5,5,5,5,5,5,5,5,5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','py_yacc.py',18),
  ('statements -> statements statement','statements',2,'p_statements','py_yacc.py',25),
  ('statements -> statement','statements',1,'p_statements','py_yacc.py',26),
  ('statement -> assignment','statement',1,'p_statement','py_yacc.py',37),
  ('statement -> operation','statement',1,'p_statement','py_yacc.py',38),
  ('statement -> print','statement',1,'p_statement','py_yacc.py',39),
  ('statement -> if_elif_else','statement',1,'p_statement','py_yacc.py',40),
  ('statement -> while','statement',1,'p_statement','py_yacc.py',41),
  ('statement -> for','statement',1,'p_statement','py_yacc.py',42),
  ('statement -> BREAK','statement',1,'p_statement','py_yacc.py',43),
  ('assignment -> VARIABLE = NUMBER','assignment',3,'p_assignment','py_yacc.py',54),
  ('assignment -> VARIABLE [ expr ] = NUMBER','assignment',6,'p_assignment','py_yacc.py',55),
  ('assignment -> VARIABLE = VARIABLE','assignment',3,'p_assignment','py_yacc.py',56),
  ('assignment -> VARIABLE = VARIABLE [ expr ]','assignment',6,'p_assignment','py_yacc.py',57),
  ('assignment -> VARIABLE = num_list','assignment',3,'p_assignment','py_yacc.py',58),
  ('num_list -> [ numbers ]','num_list',3,'p_num_list','py_yacc.py',92),
  ('numbers -> NUMBER','numbers',1,'p_numbers','py_yacc.py',99),
  ('numbers -> numbers , NUMBER','numbers',3,'p_numbers','py_yacc.py',100),
  ('operation -> VARIABLE = expr','operation',3,'p_operation','py_yacc.py',111),
  ('operation -> VARIABLE [ expr ] = expr','operation',6,'p_operation','py_yacc.py',112),
  ('expr -> expr + term','expr',3,'p_expr','py_yacc.py',127),
  ('expr -> expr - term','expr',3,'p_expr','py_yacc.py',128),
  ('expr -> expr DIV expr','expr',3,'p_expr','py_yacc.py',129),
  ('expr -> term','expr',1,'p_expr','py_yacc.py',130),
  ('expr -> LEN ( factor )','expr',4,'p_expr','py_yacc.py',131),
  ('term -> term * factor','term',3,'p_term','py_yacc.py',147),
  ('term -> term / factor','term',3,'p_term','py_yacc.py',148),
  ('term -> factor','term',1,'p_term','py_yacc.py',149),
  ('factor -> NUMBER','factor',1,'p_factor','py_yacc.py',161),
  ('factor -> VARIABLE','factor',1,'p_factor','py_yacc.py',162),
  ('factor -> VARIABLE [ expr ]','factor',4,'p_factor','py_yacc.py',163),
  ('factor -> ( expr )','factor',3,'p_factor','py_yacc.py',164),
  ('print -> PRINT ( VARIABLE )','print',4,'p_print','py_yacc.py',182),
  ('condition -> factor > factor','condition',3,'p_condition','py_yacc.py',189),
  ('condition -> factor < factor','condition',3,'p_condition','py_yacc.py',190),
  ('condition -> factor LE factor','condition',3,'p_condition','py_yacc.py',191),
  ('condition -> factor GE factor','condition',3,'p_condition','py_yacc.py',192),
  ('if_elif_else -> if','if_elif_else',1,'p_if_elif_else','py_yacc.py',201),
  ('if_elif_else -> if elif else','if_elif_else',3,'p_if_elif_else','py_yacc.py',202),
  ('if -> IF ( condition ) { statements }','if',7,'p_if','py_yacc.py',214),
  ('elif -> ELIF ( condition ) { statements }','elif',7,'p_elif','py_yacc.py',222),
  ('else -> ELSE { statements }','else',4,'p_else','py_yacc.py',230),
  ('while -> WHILE ( condition ) { statements }','while',7,'p_while','py_yacc.py',237),
  ('for -> FOR ( conditions ) { statements }','for',7,'p_for','py_yacc.py',245),
  ('conditions -> assignment ; condition ; increment','conditions',5,'p_conditions','py_yacc.py',253),
  ('increment -> VARIABLE INC','increment',2,'p_increment','py_yacc.py',262),
]
