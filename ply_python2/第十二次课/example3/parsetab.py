
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "IF NUMBER PRINT VARIABLE WHILEprogram : statementsstatements : statements statement\n                  | statement statement : assignment\n                  | operation\n                  | print\n                  | if\n                  | whileassignment : VARIABLE '=' NUMBERoperation : VARIABLE '=' VARIABLE '+' VARIABLE\n                 | VARIABLE '=' VARIABLE '-' VARIABLEprint : PRINT '(' VARIABLE ')' if : IF '(' condition ')' '{' statements '}' condition : VARIABLE '>' VARIABLE\n                 | VARIABLE '<' VARIABLEwhile : WHILE '(' condition ')' '{' statements '}' "
    
_lr_action_items = {')':([18,20,23,31,32,],[24,27,30,-15,-14,]),'(':([2,4,11,],[14,15,17,]),'+':([21,],[29,]),'=':([5,],[16,]),'-':([21,],[28,]),'NUMBER':([16,],[22,]),'PRINT':([0,1,3,6,8,9,10,12,13,22,24,33,34,35,36,37,38,39,40,],[2,2,-4,-8,-3,-6,-5,-7,-2,-9,-12,2,-11,-10,2,2,2,-16,-13,]),'WHILE':([0,1,3,6,8,9,10,12,13,22,24,33,34,35,36,37,38,39,40,],[4,4,-4,-8,-3,-6,-5,-7,-2,-9,-12,4,-11,-10,4,4,4,-16,-13,]),'VARIABLE':([0,1,3,6,8,9,10,12,13,14,15,16,17,22,24,25,26,28,29,33,34,35,36,37,38,39,40,],[5,5,-4,-8,-3,-6,-5,-7,-2,18,19,21,19,-9,-12,31,32,34,35,5,-11,-10,5,5,5,-16,-13,]),'{':([27,30,],[33,36,]),'IF':([0,1,3,6,8,9,10,12,13,22,24,33,34,35,36,37,38,39,40,],[11,11,-4,-8,-3,-6,-5,-7,-2,-9,-12,11,-11,-10,11,11,11,-16,-13,]),'}':([3,6,8,9,10,12,13,22,24,34,35,37,38,39,40,],[-4,-8,-3,-6,-5,-7,-2,-9,-12,-11,-10,39,40,-16,-13,]),'<':([19,],[25,]),'>':([19,],[26,]),'$end':([1,3,6,7,8,9,10,12,13,22,24,34,35,39,40,],[-1,-4,-8,0,-3,-6,-5,-7,-2,-9,-12,-11,-10,-16,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,33,36,],[1,37,38,]),'assignment':([0,1,33,36,37,38,],[3,3,3,3,3,3,]),'while':([0,1,33,36,37,38,],[6,6,6,6,6,6,]),'program':([0,],[7,]),'statement':([0,1,33,36,37,38,],[8,13,8,8,13,13,]),'print':([0,1,33,36,37,38,],[9,9,9,9,9,9,]),'operation':([0,1,33,36,37,38,],[10,10,10,10,10,10,]),'condition':([15,17,],[20,23,]),'if':([0,1,33,36,37,38,],[12,12,12,12,12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','py_yacc.py',16),
  ('statements -> statements statement','statements',2,'p_statements','py_yacc.py',22),
  ('statements -> statement','statements',1,'p_statements','py_yacc.py',23),
  ('statement -> assignment','statement',1,'p_statement','py_yacc.py',33),
  ('statement -> operation','statement',1,'p_statement','py_yacc.py',34),
  ('statement -> print','statement',1,'p_statement','py_yacc.py',35),
  ('statement -> if','statement',1,'p_statement','py_yacc.py',36),
  ('statement -> while','statement',1,'p_statement','py_yacc.py',37),
  ('assignment -> VARIABLE = NUMBER','assignment',3,'p_assignment','py_yacc.py',43),
  ('operation -> VARIABLE = VARIABLE + VARIABLE','operation',5,'p_operation','py_yacc.py',52),
  ('operation -> VARIABLE = VARIABLE - VARIABLE','operation',5,'p_operation','py_yacc.py',53),
  ('print -> PRINT ( VARIABLE )','print',4,'p_print','py_yacc.py',58),
  ('if -> IF ( condition ) { statements }','if',7,'p_if','py_yacc.py',63),
  ('condition -> VARIABLE > VARIABLE','condition',3,'p_condition','py_yacc.py',70),
  ('condition -> VARIABLE < VARIABLE','condition',3,'p_condition','py_yacc.py',71),
  ('while -> WHILE ( condition ) { statements }','while',7,'p_while','py_yacc.py',76),
]
